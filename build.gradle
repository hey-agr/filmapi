buildscript {
	ext {
		springBootVersion = '2.6.2'
		springDependecyManagementVersion = '1.0.11.RELEASE'
		swaggerVersion = '3.0.0'
		lombokVersion = '1.18.22'
		postgresqlVersion = '42.3.0'
		flywayVersion = '8.0.2'
		log4jVersion = '2.16.0'
		testContainersVersion = '1.16.2'
	}

	// https://nvd.nist.gov/vuln/detail/CVE-2021-44228
	ext['log4j2.version'] = log4jVersion
}

plugins {
	id 'java'
	id 'org.springframework.boot' version "${springBootVersion}"
	id 'io.spring.dependency-management' version "${springDependecyManagementVersion}"
	id "org.flywaydb.flyway" version "${flywayVersion}"
}

group = 'ru.agr.filmscontent'
version = '1.0.0'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

def project_schema_name = 'main'
def local_postgres_url = System.getenv('JDBC_DATABASE_URL') ? System.getenv('JDBC_DATABASE_URL') : 'jdbc:postgresql://localhost:5432/filmapi'
def local_db_user = System.getenv('JDBC_DATABASE_USERNAME') ? System.getenv('JDBC_DATABASE_USERNAME') : 'postgres'
def local_db_password = System.getenv('JDBC_DATABASE_PASSWORD') ? System.getenv('JDBC_DATABASE_PASSWORD') : 'P@ssw0rd'

flyway {
	url = local_postgres_url
	user = local_db_user
	password = local_db_password
	schemas = [project_schema_name]
}

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

configurations.all {
	resolutionStrategy.eachDependency { DependencyResolveDetails details ->
		if (details.requested.group == 'org.flywaydb') {
			details.useVersion flywayVersion
		}
	}
}

task prepareArtifact() {
	doLast {
		def moduleName = "filmapi"
		def artifactsDirectory = "${rootDir.toString()}/build/libs".toString()
		def jarExtension = "jar"
		copy {
			from "${artifactsDirectory}/${moduleName}-${version}.${jarExtension}"
			rename { String filename -> return "${moduleName}.${jarExtension}"}
			into "${artifactsDirectory}"
		}
	}
}

bootJar {
	enabled = true
	launchScript()
	finalizedBy(prepareArtifact)
}

repositories {
	mavenCentral()
}

dependencies {
	//Spring
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	//DB
	implementation group: 'org.postgresql', name: 'postgresql', version: "${postgresqlVersion}"
	implementation "org.flywaydb:flyway-core:${flywayVersion}"

	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt
	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'

	//Lombok
	implementation group: 'org.projectlombok', name: 'lombok', version: "${lombokVersion}"
	compileOnly "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    //SWAGGER
	implementation group: 'io.springfox', name: 'springfox-boot-starter', version: "${swaggerVersion}"

	//TESTS
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation "org.testcontainers:postgresql:${testContainersVersion}"
}